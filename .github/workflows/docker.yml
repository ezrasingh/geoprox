name: Publish Docker images

on:
  push:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: geoprox

jobs:
  publish:
    name: Publish Docker images
    runs-on: ubuntu-latest
    environment: release
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        target: ["alpine", "debian"]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.target == 'alpine' && github.ref_name == github.event.repository.default_branch }}
            type=raw,value={{tag}},enable=${{ matrix.target == 'alpine' && github.ref_type == 'tag' }}
            type=raw,value=latest-${{ matrix.target }},enable={{is_default_branch}}
            type=raw,value=${{ matrix.target }},enable={{is_default_branch}}
            type=raw,value={{tag}}-${{ matrix.target }},enable=${{ github.ref_type == 'tag' }}
          labels: |
            maintainer=ezrasingh
            org.opencontainers.image.title=Geoprox
            org.opencontainers.image.description=A Geo-Proximity detection service for efficient real-time geo-aware contract pairing
            org.opencontainers.image.licenses=Apache-2.0,MIT

      - name: Build and push Alpine images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: contrib/docker/Dockerfile.${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
