/* tslint:disable */
/* eslint-disable */
/**
 * geoprox-server
 * Geoprox server implementation providing a HTTP API for geospatial queries and position tracking
 *
 * The version of the OpenAPI document: 0.4.1
 * Contact: singhezra@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Neighbor } from './Neighbor';
import {
    NeighborFromJSON,
    NeighborFromJSONTyped,
    NeighborToJSON,
} from './Neighbor';

/**
 * Returns indices and object keys found with their distance
 * @export
 * @interface QueryRangeManyResponse
 */
export interface QueryRangeManyResponse {
    /**
     * Contains information about any errors occured during batch search.
     * @type {{ [key: string]: string; }}
     * @memberof QueryRangeManyResponse
     */
    errors: { [key: string]: string; };
    /**
     * Object keys found within range
     * @type {{ [key: string]: Array<Neighbor>; }}
     * @memberof QueryRangeManyResponse
     */
    results: { [key: string]: Array<Neighbor>; };
}

/**
 * Check if a given object implements the QueryRangeManyResponse interface.
 */
export function instanceOfQueryRangeManyResponse(value: object): value is QueryRangeManyResponse {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function QueryRangeManyResponseFromJSON(json: any): QueryRangeManyResponse {
    return QueryRangeManyResponseFromJSONTyped(json, false);
}

export function QueryRangeManyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryRangeManyResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'errors': json['errors'],
        'results': json['results'],
    };
}

export function QueryRangeManyResponseToJSON(value?: QueryRangeManyResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'errors': value['errors'],
        'results': value['results'],
    };
}

