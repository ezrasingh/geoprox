/*
geoprox-server

Geoprox server implementation providing a HTTP API for geospatial queries and position tracking

API version: 0.4.1
Contact: singhezra@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package geoprox_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DropIndexResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DropIndexResponse{}

// DropIndexResponse Returns index deletion status
type DropIndexResponse struct {
	// If true index was deleted
	Deleted bool `json:"deleted"`
}

type _DropIndexResponse DropIndexResponse

// NewDropIndexResponse instantiates a new DropIndexResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDropIndexResponse(deleted bool) *DropIndexResponse {
	this := DropIndexResponse{}
	this.Deleted = deleted
	return &this
}

// NewDropIndexResponseWithDefaults instantiates a new DropIndexResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDropIndexResponseWithDefaults() *DropIndexResponse {
	this := DropIndexResponse{}
	return &this
}

// GetDeleted returns the Deleted field value
func (o *DropIndexResponse) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *DropIndexResponse) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *DropIndexResponse) SetDeleted(v bool) {
	o.Deleted = v
}

func (o DropIndexResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DropIndexResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deleted"] = o.Deleted
	return toSerialize, nil
}

func (o *DropIndexResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deleted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDropIndexResponse := _DropIndexResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDropIndexResponse)

	if err != nil {
		return err
	}

	*o = DropIndexResponse(varDropIndexResponse)

	return err
}

type NullableDropIndexResponse struct {
	value *DropIndexResponse
	isSet bool
}

func (v NullableDropIndexResponse) Get() *DropIndexResponse {
	return v.value
}

func (v *NullableDropIndexResponse) Set(val *DropIndexResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDropIndexResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDropIndexResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDropIndexResponse(val *DropIndexResponse) *NullableDropIndexResponse {
	return &NullableDropIndexResponse{value: val, isSet: true}
}

func (v NullableDropIndexResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDropIndexResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


